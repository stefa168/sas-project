@startuml Operazione 2a.1
skinparam Style strictuml

collections UI

participant "kitchenTMgr: KitchenTaskManager" as ktm
UI -> ktm: deleteExtraDuty(kitchenDuty)
activate ktm

alt currentSheet==null
    UI <<-- ktm: throw UseCaseLogicException
else
    participant "kitchenTMgr.currentSheet: SummarySheet" as ss
    ktm -> ss: deleteExtraDuty(kitchenDuty)
    activate ss

    loop for all task in currentSheet.tasks
        alt (task.optionalDuty != null) && (task.optionalDuty == kitchenDuty)
            loop for all job in task.jobs
                participant "task.jobs: ArrayList<Job>" as j
                participant "job.turn: Turn" as jobTurn

                ss -> jobTurn: freeTime(job.cook, job.estimatedDuration)
                note left: La definizione completa di\n//freeTime()// Ã¨ nel DSD 6c
                activate jobTurn
                deactivate jobTurn

                ss -> j: remove(job)
                activate j
                deactivate j
            end

            participant "currentSheet.tasks: ArrayList<Task>" as tasks
            ss -> tasks: remove(task)
            activate tasks
            deactivate tasks
        end
    end
    
    participant "currentSheet.extraDuties: ArrayList<KitchenDuty>" as kdList
    ss -> kdList: remove(kitchenDuty)
    activate kdList
    deactivate kdList
    
    ktm <<-- ss: currentSheet
    deactivate ss

    participant "ktr: KitchenTaskReceiver" as ktr
    |||
    ktm -> ktm: notifyAddExtraDuty(kitchenDuty)
        activate ktm
    loop for all ktr in eventReceivers
        ktm -> ktr : updateDeleteExtraDuty(kitchenDuty)
        activate ktr
        deactivate ktr
    end
    deactivate ktm

    UI <<-- ktm : currentSheet
    deactivate ktm

    
end

@enduml