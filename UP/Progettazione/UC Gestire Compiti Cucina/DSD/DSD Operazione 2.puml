@startuml Operazione 2
skinparam Style strictuml

title 2 addExtraDuty

collections UI

participant "kitchenTMgr: KitchenTaskManager" as ktm
UI -> ktm: addExtraDuty(parentKitchenDuty)
participant "ktr: KitchenTaskEventReceiver" as ktr

activate ktm

alt currentSheet==null
    UI <<-- ktm: throw UseCaseLogicException
else
    participant "kitchenTMgr.currentSheet: SummarySheet" as ss
    ktm -> ss: addExtraDuty(parentKitchenDuty)
    activate ss
    
    participant "newDuties: ArrayList<KitchenDuty>" as kdList
    ss -->> kdList**: create()
    activate kdList
        return newDuties
    deactivate kdList
    
    ss -> kdList: add(parentKitchenDuty)
    activate kdList
    deactivate kdList

    participant "parentKitchenDuty: KitchenDuty" as parent

    ss -> parent: getSubDuties()
    activate parent
    ss <<-- parent: subDuties
    deactivate parent

    ss -> kdList: addAll(subDuties)
    activate kdList
    deactivate kdList

    participant "currentSheet.extraDuties: ArrayList<KitchenDuty>" as extraDuties
    ss -> extraDuties: addAll(newDuties)
    activate extraDuties
    deactivate extraDuties

    participant "newTasks: ArrayList<Task>" as newTasks
    ss -->> newTasks **: create()
    activate newTasks
    ss <<--newTasks: newTasks
    deactivate newTasks

    loop ""for all"" duty ""in"" newDuties
        participant "task: Task" as t
        ss -->> t**: create(duty, true)
        activate t
            t -> t: this.amount = 0
            t -> t: this.estimatedDuration = 0
            t -> t: this.toDo = true
            t -> t: this.optionalDuty = true
            t -> t: this.duty = duty
            ss <<-- t: task
        deactivate t


        ss -> newTasks: add(task)
        activate newTasks
        deactivate newTasks
    end

    participant "currentSheet.tasks: ArrayList<Task>" as tasks
    ss -> tasks: addAll(newTasks)
    activate tasks
    deactivate tasks

    ktm <<-- ss: newTasks
    deactivate ss
    |||
    loop ""for all"" task ""in"" newTasks
        ktm -> ktm: notifyAddExtraDuty(task)
        activate ktm
            loop ""for all"" ktr ""in"" eventReceivers
                ktm -> ktr : updateAddExtraDuty(task)
                activate ktr
                deactivate ktr
            end
        deactivate ktm
    end

    UI <<-- ktm : newTasks
    deactivate ktm

    
end

@enduml