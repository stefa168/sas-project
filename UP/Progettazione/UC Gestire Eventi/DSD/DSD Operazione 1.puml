@startuml
skinparam Style strictuml

collections UI
participant "evenManager: EventManager" as em
participant "userMgr: UserManager" as um
participant "eventManager.eventReceivers: EventEventReceivers" as eer

UI -> em: createEvent(startDate)
activate em
em -> um: getCurrentUser()
activate um
em <<-- um: user
deactivate um

alt !user.isOrganizer()
    UI <<-- em: throw UseCaseLogicException
else startDate.compareTo(LocalDate.now())) < 0
    UI <<-- em: throw EventException
else
    participant "macroEvent: MacroEvent" as maev
    em -->> maev **: create()
    activate maev
    participant "macroEvent.events: ArrayList<Event>" as events
    maev-->> events**:create()
    activate events
    maev <<-- events: events
    deactivate events
    maev -> maev: this.events = events
    em <<-- maev: macroEvent
    deactivate maev

    em -> maev: addEvent(startDate)
    activate maev
    participant "event: Event" as ev
    maev -->> ev **: create(startDate)
    activate ev
    ev->ev: this.startDate = startDate
    ev -> ev: this.state = active
    maev <<-- ev: event
    deactivate ev
    maev -> events: add(event)
    activate events
    deactivate events
    em <<-- maev: event
    deactivate maev


    em -> maev : setDefaultEvent(event)
    activate maev
    alt !macroEvent.events.contains(event)
        UI <<-- maev: UseCaseLogicException
    else
        maev <- maev: this.defaultEvent = event
        em <<-- maev: event
    end
        deactivate maev
        loop for all receivers in eventReceivers
            em -> eer: updateCreateEvent(event)
            activate eer
            deactivate eer
        end
    UI <<-- em: macroEvent
    deactivate em
end

@enduml