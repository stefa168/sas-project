@startuml
skinparam Style strictuml
skinparam SequenceMessageAlign center

skinparam sequence {
    ActorBorderColor Black
    ActorBackgroundColor White
    ParticipantBorderColor Black
    ParticipantBackgroundColor White
}

actor Chef
participant Sistema

title Gestire Eventi - Operazione 5

Chef -> Sistema: **1**. creaEvento(dataInizio, cliente)
return nuovo evento

loop #e0e0e0
    opt #e0e0e0
        Chef -> Sistema: **2**. aggiungiNote(note)
        return ok
        ||10||
    end

    opt #e0e0e0
        Chef -> Sistema: **3**. visualizzaStatoCucina()
        return stato cucina
        ||10||
    end

    opt #e0e0e0
        Chef -> Sistema: **4**. modificaDettagliEvento(dataInizio?, cliente?)
        return ok
        ||10||
    end

    opt #b6efb6
        alt #f3d0ff
            Chef -> Sistema: **5**. aggiungiServizio(offsetInizio, rangeOrario, numeroCommensali, luogo, dettagli, strategia)
            alt #f3a7c9
                return ok
                ||10||
            else
                Chef <- Sistema: **5a.1**. offsetInizio identifica un giorno già passato
                destroy Sistema
                ||10||
            end
        else
            Chef -> Sistema: **5a.1**. annullaServizio(servizio, strategia)
            alt #f3a7c9
                return warning penale
                ||10||
            else
                Chef <- Sistema: **5a.1a.1**. servizio già annullato o concluso
                destroy Sistema
                ||10||
            end
        else
            Chef -> Sistema: **5b.1**. eliminaServizio(servizio, strategia)
            alt #f3a7c9
                return ok
                ||10||
            else
                Chef <- Sistema: **5b.1a.1**. servizio confermato
                destroy Sistema
                ||10||
            else
                Chef <- Sistema: **5b.1b.1**. servizio già annullato o concluso
                destroy Sistema
                ||10||
            end
        else
            Chef -> Sistema: **5c.1**. modificaDettagliServizio(servizio, offsetInizio?, rangeOrario?, numeroCommensali?, luogo?, dettagli?, strategia)
            alt #f3a7c9
                return ok
                ||10||
            else
                Chef <- Sistema: **5c.1a.1**. servizio confermato
                destroy Sistema
                ||10||
            else
                Chef <- Sistema: **5c.1b.1**. servizio già annullato o concluso
                destroy Sistema
                ||10||
            else
                Chef <- Sistema: **5c.1c.1**. offsetInizio identifica un giorno già passato
                destroy Sistema
                ||10||
            end
        end
        ||10||
    end

    opt #e0e0e0
        Chef -> Sistema: **6**. assegnaChef(chef, strategia)
        return ok
        ||10||
    end

    opt #e0e0e0
        Chef -> Sistema: **7**. confermaMenuServizio(servizio)
        return ok
        ||10||
    end

    opt #e0e0e0
        Chef -> Sistema: **8**. assegnaPersonale(dipendente, turnoServizio, ruolo?)
        return ok
        ||10||
    end
end
@enduml